services:
  frontend:
    build: ./frontend
    volumes:
      - ./frontend/:/app
      - /app/node_modules

  processing:
    build: ./processing
    volumes:
      - ./processing/app:/app/app
      - ./processing/data:/app/data
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - OLLAMA_API_UR=${OLLAMA_API_URL}
    depends_on:
      - db

  survey:
    build: ./survey
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_NAME}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db

  ai:
    restart: always
    image: ollama/ollama:latest
    ports:
      - "2137:11434"
    profiles:
      - ollama
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_MODELS=mistral:latest
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  db:
    restart: always
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data

  gateway:
    restart: always
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./gateway/swagger:/usr/share/nginx/html/swagger # Add this line to serve Swagger UI
    depends_on:
      - frontend
      - processing
      - survey
volumes:
  ollama_data:
  db_data:
