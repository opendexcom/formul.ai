services:
  frontend:
    build: ./frontend
    environment:
      VITE_API: ${BASE_URL:-http://localhost}
    volumes:
      - ./frontend/:/app
      - /app/node_modules

  processing:
    build: ./processing
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      OLLAMA_API_URL: ${OLLAMA_API_URL}
    volumes:
      - ./processing/app:/app/app
      - ./processing/data:/app/data
    depends_on:
      db:
        condition: service_healthy
    restart: always

  survey:
    build: ./survey
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_HOST:-db}:${POSTGRES_PORT:-5432}/${POSTGRES_NAME}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    restart: always

  ai:
    restart: always
    image: ollama/ollama:latest
    ports:
      - "2137:11434"
    profiles:
      - ollama
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_MODELS=mistral:latest
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  db:
    restart: always
    image: postgres:17-alpine
    ports:
      - "${POSTGRES_PORT_EXTERNAL:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=$POSTGRES_PASSWORD pg_isready -U $POSTGRES_USERNAME -d $POSTGRES_NAME -p 5432"]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./pg-healthcheck.sh:/healthcheck/pg-healthcheck.sh:ro

  gateway:
    restart: always
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./gateway/swagger:/usr/share/nginx/html/swagger # Add this line to serve Swagger UI
    depends_on:
      - frontend
      - processing
      - survey
volumes:
  ollama_data:
  db_data:
